//@@.reserve ( value ; noQuote )

Let (
[
reservedWords =
"¶" &
"ABSOLUTE¶ACTION¶ADD¶ALL¶ALLOCATE¶ALTER¶AND¶ANY¶ARE¶AS¶ASC¶ASSERTION¶AT¶AUTHORIZATION¶AVG¶" &
"BEGIN¶BETWEEN¶BINARY¶BIT¶BIT_LENGTH¶BLOB¶BOOLEAN¶BOTH¶BY¶" &
"CASCADE¶CASCADED¶CASE¶CAST¶CATALOG¶CHAPTER¶CHAPTER¶CHAR¶CHARACTER¶CHARACTER_LENGTH¶CHAR_LENGTH¶CHECK¶CHR¶CLOSE¶" &
"COALESCE¶COLLATE¶COLLATION¶COLUMN¶COMMIT¶CONNECT¶CONNECTION¶CONSTRAINT¶CONSTRAINTS¶CONTINUE¶CONVERT¶CORRESPONDING¶COUNT¶" &
"CREATE¶CROSS¶CURDATE¶CURRENT¶CURRENT_DATE¶CURRENT_TIME¶CURRENT_TIMESTAMP¶CURRENT_USER¶CURSOR¶CURTIME¶CURTIMESTAMP¶" &
"DATE¶DATEVAL¶DAY¶DAYNAME¶DAYOFWEEK¶DEALLOCATE¶DEC¶DECIMAL¶DECLARE¶DEFAULT¶DEFERRABLE¶DEFERRED¶DELETE¶DESC¶DESCRIBE¶" &
"DESCRIPTOR¶DIAGNOSTICS¶DISCONNECT¶DISTINCT¶DOMAIN¶DOUBLE¶DROP¶" & "ELSE¶END¶END_EXEC¶ESCAPE¶EVERY¶EXCEPT¶EXCEPTION¶EXEC¶EXECUTE¶EXISTS¶EXTERNAL¶EXTRACT¶" &
"FALSE¶FETCH¶FIRST¶FLOAT¶FOR¶FOREIGN¶FOUND¶FROM¶FULL¶" & "GET¶GLOBAL¶GO¶GOTO¶GRANT¶GROUP¶HAVING¶HOUR¶" &
"IDENTITY¶IMMEDIATE¶IN¶INDEX¶INDICATOR¶INITIALLY¶INNER¶INPUT¶INSENSITIVE¶INT¶INTEGER¶INTERSECT¶INTERVAL¶INTO¶IS¶ISOLATION¶JOIN¶KEY¶" &
"LANGUAGE¶LAST¶LEADING¶LEFT¶LENGTH¶LEVEL¶LIKE¶LOCAL¶LONGVARBINARY¶LOWER¶LTRIM¶MATCH¶MAX¶MIN¶MINUTE¶MODULE¶MONTH¶MONTHNAME¶" &
"NAMES¶NATIONAL¶NATURAL¶NCHAR¶NEXT¶NO¶NOT¶NSERT¶NULL¶NULLIF¶NUMERIC¶NUMVAL¶" & "OCTET_LENGTH¶" &
"OF¶ON¶ONLY¶OPEN¶OPTION¶OR¶ORDER¶OUTER¶OUTPUT¶OVERLAPS¶" & "PAD¶PART¶PARTIAL¶POSITION¶PRECISION¶PREPARE¶PRESERVE¶PRIMARY¶PRIOR¶PRIVILEGES¶PROCEDURE¶PUBLIC¶" &
"READ¶REAL¶REFERENCES¶RELATIVE¶RESTRICT¶REVOKE¶RIGHT¶ROLLBACK¶ROUND¶ROWID¶ROWS¶RTRIM¶" &
"SCHEMA¶SCROLL¶SECOND¶SECTION¶SELECT¶SESSION¶SESSION_USER¶SET¶SIZE¶SMALLINT¶SOME¶SPACE¶SQL¶SQLCODE¶SQLERROR¶SQLSTATE¶" &
"STANDARDS¶STANDARDS¶STRVAL¶SUBSTRING¶SUM¶SUPPORTED¶SUPPORTED¶SYSTEM_USER¶" &
"TABLE¶TEMPORARY¶THEN¶TIME¶TIMESTAMP¶TIMESTAMPVAL¶TIMEVAL¶TIMEZONE_HOUR¶TIMEZONE_MINUTE¶TO¶TODAY¶" & "TRAILING¶TRANSACTION¶TRANSLATE¶TRANSLATION¶TRIM¶TRUE¶" &
"UNION¶UNIQUE¶UNKNOWN¶UPDATE¶UPPER¶USAGE¶USAGE¶USER¶USER¶USERNAME¶USERNAME¶USING¶USING¶" &
"VALUE¶VALUES¶VARBINARY¶VARCHAR¶VARYING¶VIEW¶WHEN¶WHENEVER¶WHERE¶WITH¶WORK¶WRITE¶YEAR¶ZONE" &
"¶" ;

value = Trim ( value ) ; valueLeftWord = LeftWords ( value ; 1 ) ;
isIllegal = Length ( Filter ( value ; " .|-*/<>,==~!^()'\"" ) ) or not Length ( Filter ( Left ( Upper ( value ) ; 1 ) ; "ABCDEFGHIJKLMNOPQRSTUVWXYZ" ) ) ;
isReserved = PatternCount ( reservedWords ; ¶ & value & ¶ ) > 0 ;
isReservedNoQuote = PatternCount ( reservedWords ; ¶ & valueLeftWord & ¶ ) > 0

] ;

Case (
	noQuote and isReservedNoQuote ; Upper ( value ) ;
	noQuote ; Lower ( value ) ;
	isReserved ; "\"" & Upper ( value ) & "\"" ;
	isIllegal ; "\"" & Lower ( value ) & "\"" ;
	Lower ( value )
)

)

/*・・・・・・・・・・・・・・・・・・・・・・・・
Copyright (c) Brian Schick, 2013.
For help, inline tutorial, and open source license info, call this function itself, lke so:
@ ( "" ; "?" )
・・・・・・・・・・・・・・・・・・・・・・・・*/
